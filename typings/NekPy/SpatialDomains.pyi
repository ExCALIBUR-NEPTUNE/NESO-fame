from __future__ import annotations
from collections.abc import MutableMapping

class Geometry:
    def SetGlobalID(self, val: int) -> None: ...

class Geometry1D(Geometry): ...

class Geometry2D(Geometry):
    def GetEdge(self, edge: int) -> SegGeom: ...

class Geometry3D(Geometry): ...

class PointGeom(Geometry): ...
class SegGeom(Geometry1D): ...
class TriGeom(Geometry2D): ...
class QuadGeom(Geometry2D): ...
class TetGeom(Geometry3D): ...
class PrismGeom(Geometry3D): ...
class PyrGeom(Geometry3D): ...
class HexGeom(Geometry3D): ...

class Curve: ...
class Composite: ...

class MeshGraph:
    def GetAllPointGeoms(self) -> MutableMapping[int, PointGeom]: ...
    def GetAllSegGeoms(self) -> MutableMapping[int, SegGeom]: ...
    def GetAllTriGeoms(self) -> MutableMapping[int, TriGeom]: ...
    def GetAllQuadGeoms(self) -> MutableMapping[int, QuadGeom]: ...
    def GetAllTetGeoms(self) -> MutableMapping[int, TetGeom]: ...
    def GetAllPyrGeoms(self) -> MutableMapping[int, PyrGeom]: ...
    def GetAllPrismGeoms(self) -> MutableMapping[int, PrismGeom]: ...
    def GetAllHexGeoms(self) -> MutableMapping[int, HexGeom]: ...

class MeshGraphXml(MeshGraph): ...

class Zone: ...
class ZoneFixed(Zone): ...

class Interface: ...

class FieldMetaDataMap: ...
